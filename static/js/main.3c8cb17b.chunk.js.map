{"version":3,"sources":["Component/Classroom/index.js","Component/ListCLassroom/index.js","App.js","reportWebVitals.js","index.js"],"names":["Classroom","props","Card","this","dataClass","name","Component","ListClassRoom","listClassRoom","listCl","console","log","state","arrayClassRoom","map","classr","index","getValueFromForm","e","setState","formValue","nameValue","target","value","addDataToAPI","arrayClassRoom1","push","Axios","method","url","data","then","res","catch","error","type","placeholder","onChange","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAIqBA,E,kDACjB,WAAYC,GAAO,uCACTA,G,0CAIV,WACI,OACA,cAACC,EAAA,EAAD,UACI,4BAAIC,KAAKF,MAAMG,UAAUC,a,GATEC,aCClBC,E,kDACjB,WAAYN,GAAO,IAAD,8BACd,cAAMA,IASVO,cAAc,SAACC,GAGX,OAFAC,QAAQC,IAAI,EAAKC,MAAMC,gBAEhBJ,EAAOK,KAAI,SAACC,EAAOC,GACtB,OAAO,cAAC,EAAD,CAAWZ,UAAWW,QAdnB,EA+BlBE,iBAAiB,SAACC,GACd,EAAKC,SAAS,CACVC,UAAU,CACNC,UAAUH,EAAEI,OAAOC,UAlCb,EAuClBC,aAAa,WACT,IAAIC,EAAgB,YAAI,EAAKb,MAAMC,gBACnCY,EAAgBC,KAAK,EAAKd,MAAMQ,WAChCO,IAAM,CACFC,OAAO,OACPC,IAAI,kDACJC,KAAK,EAAKlB,MAAMQ,YACjBW,MAAK,SAACC,GACL,EAAKb,SAAS,CACVN,eAAeY,QA9CvB,EAAKb,MAAM,CACPC,eAAe,GACfO,UAAU,CACNC,UAAU,KALJ,E,sDAmBlB,WAAqB,IAAD,OAChBM,IAAM,CACFC,OAAO,MACPC,IAAI,oDACLE,MAAK,SAACC,GACL,EAAKb,SAAS,CACVN,eAAgBmB,EAAIF,UAEzBG,OAAM,SAACC,GACNxB,QAAQC,IAAIuB,Q,oBAyBpB,WACI,OACA,gCACI,iCACI,8BACE,uBAAOC,KAAK,OAAO9B,KAAK,OAAO+B,YAAY,oBAAoBC,SAAUlC,KAAKc,qBAEhF,wBAAQqB,QAASnC,KAAKF,MAAMqC,QAA5B,2BAEHnC,KAAKK,cAAcL,KAAKS,MAAMC,uB,GA/DAP,aCI5BiC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3c8cb17b.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nexport default class Classroom extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <Card>\r\n            <p>{this.props.dataClass.name}</p>\r\n        </Card>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport Classroom from '../Classroom';\r\n\r\nexport default class ListClassRoom extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            arrayClassRoom:[],\r\n            formValue:{\r\n                nameValue:'',\r\n            }\r\n        }\r\n        \r\n    }\r\n    listClassRoom=(listCl)=>{\r\n        console.log(this.state.arrayClassRoom);\r\n\r\n        return listCl.map((classr,index)=>{\r\n            return(<Classroom dataClass={classr}/>)\r\n        })\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        Axios({\r\n            method:'GET',\r\n            url:'https://classroom-api-w03.herokuapp.com/classes'\r\n        }).then((res)=>{\r\n            this.setState({\r\n                arrayClassRoom: res.data\r\n            })\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }   \r\n    getValueFromForm=(e)=>{\r\n        this.setState({\r\n            formValue:{\r\n                nameValue:e.target.value,\r\n            }\r\n        })\r\n\r\n    }\r\n    addDataToAPI=()=>{\r\n        let arrayClassRoom1=[...this.state.arrayClassRoom];//copy aray\r\n        arrayClassRoom1.push(this.state.formValue);\r\n        Axios({\r\n            method:'POST',\r\n            url:'https://classroom-api-w03.herokuapp.com/classes',\r\n            data:this.state.formValue\r\n        }).then((res)=>{\r\n            this.setState({\r\n                arrayClassRoom:arrayClassRoom1\r\n            })\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n        <div>\r\n            <form>\r\n                <div>\r\n                  <input type=\"text\" name=\"name\" placeholder=\"New class name...\" onChange={this.getValueFromForm}/>\r\n                </div>\r\n                <button onClick={this.props.onClick}> Add Clas </button>\r\n            </form>\r\n            {this.listClassRoom(this.state.arrayClassRoom)}\r\n        </div>\r\n        )\r\n    }\r\n}","import './App.css';\nimport ListClassRoom from './Component/ListCLassroom';\n\nfunction App() {\n  return  (\n    <ListClassRoom/>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}